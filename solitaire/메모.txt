이슈
    같은 카드를 두 번 눌러 선택을 취소할 수 없는 문제
    func _on_card_clicked(card)에서 highest_z_index_card(clicked_cards)가 한번에 여러 번 호출되는 문제(플레이상 문제는 없음)
    파운데이션으로의 이동 시 가끔 이동 불가능
    이동 시 때로 next_card의 설정이 안 됨
작업
    이벤트 매니저를 통해 카드의 선택 지정
    이벤트 매니저를 경유해 무브매니저 이용

    시그널을 통해 데이터가 변경된 카드를 알림
        이벤트 매니저에서 이벤트 발생 시(ex. 선택) 스프라이트 매니저에 알려서 그래픽 업데이트.
        무브 매니저에서 이벤트 발생 시(모델의 정보 변경) 스프라이트 매니저에 알려서 그래픽 업데이트.

    카드의 크기 조절 기능
        스케일 팩터를 통해 카드의 좌표와 크기를 곱하고, 이벤트 매니저에 마찬가지로 적용하면 정상 작동할 것으로 추정.

    무브 매니저에서 이동을 처리할 때 deck의 어레이를 통해 이동하도록 수정

    드래그 이동(구상)
        클릭한 위치의 가장 위 카드 판정(클릭-클릭 이동과 같은 함수 이용)
        클릭한 채로 일정 이상 움직이면 드래그로 간주, 마우스를 따라 카드가 이동?
        드래그는 클릭한 카드를 선택하고, 놓은 위치를 목적지로 선택한 것으로 간주하고 move_manager 호출.



    리소스 매니저를 통해 리소스에 텍스쳐 파일 로드 후 이용(완료)
    덱이 배치되었을때 자신의 위치를 어레이로 지니게 한다.(완료)

업로드 전 작업한 내용
    이벤트 매니저에서 마우스 좌표를 통해 클릭 이벤트시 해당 좌표의 card들을 candidates 어레이에 저장하고, 해당 어레이에서 z_index가 가장 높은 카드를 확인하여 선택하도록 함
        (이벤트 매니저 내의 디버그 코드를 통해 붉은색 하이라이트를 적용)


현재 상태
    Model:
        card.gd에서 카드의 고유번호(card_number) 및 위치, 파운데이션 여부와 z_index를 저장
        deck.gd에서 카드의 초기 배치 및 배치된 구획과 순서를 저장
        resource_manager는 메모리에 엑세스하기 위한 스크립트
        constants.gd에서 상수값을 저장

    Control:
        main.gd에서 deck 배치 후 그래픽 업데이트를 sprite_manager에 요청(구현됨), 이동처리 후 뷰 업데이트 요청(미구현)

        Event_manager.gd에서 유저의 행동과 관련된 처리를 수행(현재는 클릭을 통한 선택만 구현)
        move_manager는 Event_manager에서 선택된 카드를 받아 규칙에 맞게 이동하게 할 예정.(미작업)

    View
        Sprite_manager는 resource_manager를 통해 메모리에 스프라이트 시트를 업로드하고, 읽어와서 card.gd의 정보대로 출력


목표
    데이터와 그래픽 분리_MVC모델 이용(완료)
        model : card의 정보 저장/deck에서 카드 정보 저장
        view : main, sprite_manager를 통해 card의 정보를 얻어와서 출력
        control : move_manager를 통해 model의 정보 변경

        card와 그래픽 분리, 그래픽의 크기 조절.
    UI 추가

    리버트
    선택 해제 기능
    드래그앤 드롭
    타이머
    연출

메모
-2 : 파운데이션
-1 : 덱         -1은 선택 시 덱에서 카드를 하나 배치
0 : 빈공간       0은 이동의 목표로만 선택 가능하며 K만이 이동 가능

스톡
1. 스톡의 위치에 스위치 역할을 하는 뒷면 표시의 카드를 하나 배치(선택은 불가능한 카드)
2. 해당 카드를 누르면 스톡의 스택에서 하나 팝해서 측면에 카드를 앞면으로 배치.
3. 앞면으로 배치된 카드는 테이블 카드와 같은 이동규칙을 지님.
(또한 prev_card를 지니며, 이 prev_card는 이동에 대한 제한과 무관함)
4. 스톡이 빈 경우 스톡 뒷면 표시 카드는 없애거나, 색을 바꾸는 등 표시
5. 스톡이 빈 경우 해당 카드를 누르면 측면에 꺼내 놓았던 카드를 위에서부터 순서대로 다시 스톡 스택에 저장(prev_card 이용, 역순으로 집어넣으면서 제거)

스톡 플래그 사용?

진행 예정

    파운데이션
        내부의 카드 숫자가 13이 4개이면 게임을 종료한다.
    타이머 기능
    배경
